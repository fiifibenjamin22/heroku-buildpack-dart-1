#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e
#set -x
unset GIT_DIR

function message {
  echo "$1"
  sync
}

# https://devcenter.heroku.com/articles/buildpack-api
export_env_dir() {
  env_dir=$1
  message "-----> ENV_DIR is $env_dir"
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      message "-----> ENV_DIR contains file $e"
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir "$3"

mkdir -p "$1" "$2"
BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)

cd $CACHE_DIR
rm -rf *

# this variable is used by pub to determine the package install location
PUB_CACHE="/app/pub-cache"
export PUB_CACHE
mkdir -p $PUB_CACHE

MACHINE=`uname -a`
message "-----> Welcome, this machine is: $MACHINE"

if [ -z "$DART_SDK_URL" ]; then
    message "ERROR: you must specify DART_SDK_URL to a Dart SDK for Linux. See README for this buildpack."
    exit 1
fi

cd $CACHE_DIR

message "-----> Installing Dart VM via URL $DART_SDK_URL"


case "${DART_SDK_URL: -3}" in
  tar)
    message "SDK: tarball detected"
    curl -L -k $DART_SDK_URL -o - | tar xzf -
    ;;
  zip)
    message "SDK: zip detected"
    curl -L -k $DART_SDK_URL > dart-sdk.zip ; unzip -o -q dart-sdk.zip
    ;;
  deb)
    message "SDK: deb detected"
    # TODO
    message "Please use the .zip Dart SDK"
    ;;
  *)
    message "Invalid Dart SDK URL" #kill after this or keep going in case SDK is there from last push?
    ;;
esac

message "-----> Copy Dart binaries to app root"
cp -R $CACHE_DIR/dart-sdk $BUILD_DIR

message "Downloading Flutter SDK"
curl -L -k $FLUTTER_SDK_URL > flutter-sdk.tar.xz ; tar xf flutter-sdk.tar.xz

$CACHE_DIR/flutter/bin/flutter channel beta
$CACHE_DIR/flutter/bin/flutter upgrade

message "-----> Copy Flutter binaries to app root"
cp -R $CACHE_DIR/flutter $BUILD_DIR

# we need to copy the sdk into the /app folder in order for the sdk libraries
# to be referenced correctly
# reason being that the /tmp folder will be deleted after build, and /app
# resembles the location of the ready built app
cp -R $CACHE_DIR/dart-sdk /app
cp -R $CACHE_DIR/flutter /app

#DART_BIN=`ls -l /app/dart-sdk/bin/dart`
#message "-----> Dart cmd found at $DART_BIN"

FLUTTER_BIN=`ls -l /app/flutter/bin/flutter`
message "-----> Dart cmd found at $DART_BIN"

CAN_DART_RUN=`/app/dart-sdk/bin/dart --version`
message "-----> Dart reports version: $CAN_DART_RUN"

CAN_FLUTTER_RUN=`/app/flutter/bin/flutter --version`
message "-----> Flutter reports version: $CAN_FLUTTER_RUN"

cd $BUILD_DIR

message "-----> Running env.dart"

/app/dart-sdk/bin/dart tool/env.dart

message "-----> Doing pub get"
/app/flutter/bin/flutter pub get
/app/flutter/bin/flutter config --enable-web
message 'Building with "pub build"'
/app/flutter/bin/flutter build web
rm -rf /app/flutter
rm -rf $BUILD_DIR/flutter
# I think heroku deletes all the contents of /app and replaces it with
# whatever is in $BUILD_DIR, so copy over the pub-cache. Why not put it in
# $BUILD_DIR in the first place? because we need symlinks setup correctly.
cp -R $PUB_CACHE $BUILD_DIR/pub-cache
message `ls -l $BUILD_DIR/pub-cache`
